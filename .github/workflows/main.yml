name: CI

on:
  push:
      branches:
        - main
  workflow_dispatch:

jobs:
  build:
    defaults:
          run:
            working-directory: Terraform-AWS-Services

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2


      - name: Terraform Init
        working-directory: /ECR
        run: |
          terraform init -migrate-state 

      - name: Terraform format 
        working-directory: /ECR
        run: terraform fmt 

      - name: Terraform validate 
        working-directory: Terraform-AWS-Services/ECR
        run: terraform validate -no-color 

      - name: Terraform Plan
        working-directory: Terraform-AWS-Services/ECR
        if: github.event_name == 'push'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: Terraform-AWS-Services/ECR
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: Terraform-AWS-Services/ECR
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false


      - name: Terraform Init
        working-directory: Terraform-AWS-Services/EKS-Fargate
        run: |
          terraform init -migrate-state 

      - name: Terraform format 
        working-directory: Terraform-AWS-Services/EKS-Fargate
        run: terraform fmt 

      - name: Terraform validate 
        working-directory: Terraform-AWS-Services/EKS-Fargate
        run: terraform validate -no-color 

      - name: Terraform Plan
        working-directory: Terraform-AWS-Services/EKS-Fargate
        if: github.event_name == 'push'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: Terraform-AWS-Services/EKS-Fargate
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: Terraform-AWS-Services/EKS-Fargate
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false


      - name: Terraform Init
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        run: |
          terraform init -migrate-state 

      - name: Terraform format 
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        run: terraform fmt 

      - name: Terraform validate
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        run: terraform validate -no-color 

      - name: Terraform Plan
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        if: github.event_name == 'push'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: Terraform-AWS-Services/EKS-With-Worker-Nodes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false